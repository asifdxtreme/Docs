# Requires k8s 1.19+
---
apiVersion: v1
kind: Service
metadata:
  name: vsphere-webhook-svc
  namespace: vmware-system-csi
  labels:
    app: vsphere-csi-webhook
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: vsphere-csi-webhook
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.csi.vsphere.vmware.com
webhooks:
  - name: validation.csi.vsphere.vmware.com
    clientConfig:
      service:
        name: vsphere-webhook-svc
        namespace: vmware-system-csi
        path: "/validate"
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2RENDQWRBQ0NRQ0NNS1dXZk9KNkh6QU5CZ2txaGtpRzl3MEJBUXNGQURBMk1UUXdNZ1lEVlFRRERDdDIKVTNCb1pYSmxJRU5UU1NCQlpHMXBjM05wYjI0Z1EyOXVkSEp2Ykd4bGNpQlhaV0pvYjI5cklFTkJNQjRYRFRJegpNRFF5TnpBME5UZ3dORm9YRFRJek1EVXlOekEwTlRnd05Gb3dOakUwTURJR0ExVUVBd3dyZGxOd2FHVnlaU0JEClUwa2dRV1J0YVhOemFXOXVJRU52Ym5SeWIyeHNaWElnVjJWaWFHOXZheUJEUVRDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1jUUw4SXU3emMraUJZeHdPSEsyeVZnRS90K05PK2tuOG9hS0k1dgphTjZIUFEvMTA3bUhLR0NlM0UyaTExS3dWQzU1TGZWbUV5bENvQmpkWEE4Qm03RXMwUE5kd01scFNhSmhzWmRzCi9UNzhUZUltcHhyb2JwOXkxV2w2VVNiR3BwbHVrcmMrVnlUaFA1YzZiNmlXeit5MDhmVzhiTmwxRHBsTnJXNysKcmtmZEN0UVJ5ZlNvT1Z1UmZWZ25UTmkyQ2tDRDNKSDg1ZnhGWng3SERRaGd6QTNTVTFvWW42VzR6V2IxSEp3cwpOWEs1UnIwTU5pR2ZjZTdKd05uM01jaUpsamhhSEJvMGRHeUVXSFdwVEVLTDlVejBxOGZTck5Qc0dNQk1mbExICi9JUVcvblZTR0JQU0o0Q1ZsZndlT3h0cFhaakphazMzR1hwYW8wcGlYZTQ2ZmIwQ0F3RUFBVEFOQmdrcWhraUcKOXcwQkFRc0ZBQU9DQVFFQVdKNjdVbklCdU9lSnFLZWhYR0RnMi9DMXNjZUJneVRQM1FJOTRUSmdWaFc3OUN3bApHNitIVHlNYmk0bGhOdVczY3lkZ1lGZzFlUjM4VFdYYktiQTVNNlBMSUN5WExwNmgrMVlOb0xwUnZUb1MzclM5Cko0dUJXcHM3MkdLY2NYcnY1aVJKOS9tYmQwUlJvQzBJUDVKTmlTWjJONEp0N1NyT2l3YWl0UFZNSkR2eWtYb0IKbmdGSkV1UmRDSmZMNFdkSnorM3dlZFo0Q3huMWkweTUyQ3BxN2U1SUpNUitHdEFiN2ltb0xXLy9ONGJndWtiQgpkSTVkUWp4TEJUWXVid0U0ZXBrRC9Td0RvUnFGL1YwcHFPNFZuazQzQnRkR00xU1AyUTh3K1hldkM1VHFtdTZLClpydXdEUHNvS1BSdlhJcmZUaFptbFl0cnlabittTnd3MzlLVHJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    rules:
      - apiGroups:   ["storage.k8s.io"]
        apiVersions: ["v1", "v1beta1"]
        operations:  ["CREATE", "UPDATE"]
        resources:   ["storageclasses"]
      - apiGroups:   [""]
        apiVersions: ["v1", "v1beta1"]
        operations:  ["UPDATE", "DELETE"]
        resources:   ["persistentvolumeclaims"]
        scope: "Namespaced"
    sideEffects: None
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vsphere-csi-webhook
  namespace: vmware-system-csi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-cluster-role
rules:
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-webhook
    namespace: vmware-system-csi
roleRef:
  kind: ClusterRole
  name: vsphere-csi-webhook-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-role
  namespace: vmware-system-csi
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-role-binding
  namespace: vmware-system-csi
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-webhook
    namespace: vmware-system-csi
roleRef:
  kind: Role
  name: vsphere-csi-webhook-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vsphere-csi-webhook
  namespace: vmware-system-csi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vsphere-csi-webhook
  template:
    metadata:
      labels:
        app: vsphere-csi-webhook
        role: vsphere-csi-webhook
    spec:
      serviceAccountName: vsphere-csi-webhook
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        # uncomment below toleration if you need an aggressive pod eviction in case when
        # node becomes not-ready or unreachable. Default is 300 seconds if not specified.
        #- key: node.kubernetes.io/not-ready
        #  operator: Exists
        #  effect: NoExecute
        #  tolerationSeconds: 30
        #- key: node.kubernetes.io/unreachable
        #  operator: Exists
        #  effect: NoExecute
        #  tolerationSeconds: 30
      dnsPolicy: "Default"
      containers:
        - name: vsphere-webhook
          image: gcr.io/cloud-provider-vsphere/csi/release/syncer:v2.7.0
          args:
            - "--operation-mode=WEBHOOK_SERVER"
            - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--fss-namespace=$(CSI_NAMESPACE)"
          imagePullPolicy: "Always"
          env:
            - name: WEBHOOK_CONFIG_PATH
              value: "/run/secrets/tls/webhook.config"
            - name: LOGGER_LEVEL
              value: "PRODUCTION" # Options: DEVELOPMENT, PRODUCTION
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /run/secrets/tls
              name: webhook-certs
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: webhook-certs
          secret:
            secretName: vsphere-webhook-certs
